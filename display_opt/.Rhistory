library(readr)
Kuisioner_Tugas_Akhir <- read_csv("~/Downloads/Kuisioner Tugas Akhir.csv")
View(Kuisioner_Tugas_Akhir)
View(Kuisioner_Tugas_Akhir)
View(Kuisioner_Tugas_Akhir)
View(Kuisioner_Tugas_Akhir)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
delivery.df = data.frame(
Service = c(rep("Carrier 1", 15), rep("Carrier 2", 15),
rep("Carrier 3", 15)),
Destination = c(rep(c("Office 1", "Office 2", "Office 3",
"Office 4", "Office 5"), 9)),
Time = c(15.23, 14.32, 14.77, 15.12, 14.05,
15.48, 14.13, 14.46, 15.62, 14.23, 15.19, 14.67, 14.48, 15.34, 14.22,
16.66, 16.27, 16.35, 16.93, 15.05, 16.98, 16.43, 15.95, 16.73, 15.62,
16.53, 16.26, 15.69, 16.97, 15.37, 17.12, 16.65, 15.73, 17.77, 15.52,
16.15, 16.86, 15.18, 17.96, 15.26, 16.36, 16.44, 14.82, 17.62, 15.04)
)
View(delivery.df)
library(ggplot2)
ggplot(delivery.df, aes(Time, Destination, colour = Service)) + geom_point()
delivery.mod1 = aov(Time ~ Destination*Service, data = delivery.df)
summary(delivery.mod1)
help(aov)
install.packages("pwr")
library("pwr")
pwr.f2.test(u = 3, f2 = (0.1/0.9))
pwr.f2.test(u = 3, f2 = (0.1/0.9), sig.level = 0.05, power = 0.8)
pwr.f2.test(u = 3, f2 = (0.1/0.9), sig.level = 0.05, power = 0.99)
pwr.f2.test(u = 3, f2 = (0.1/0.9), sig.level = 0.05, power = 0.9)
pwr.f2.test(u = 3, v = 8000, sig.level = 0.05, power = 0.9)
8000/(8000+1)
sqrt(8000/8001)
x <- read.csv("~/Downloads/export.csv")
x
ctr <- x$isClickBanner
y <- density(ctr)
plot(y)
var(ctr)
sd(ctr)
sqrt(sd(ctr))
sqrt(var(ctr))
var(ctr) / (1 + var(ctr))
3.380991e-05
var(ctr) / (1 - var(ctr))
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.9)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.8)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.7)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.5)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.4)
rm(list = ls())
x <- read.csv("~/Downloads/export.csv")
ctr <- x$isClickBanner
ctr_var <- var(ctr)
num_pred <- 4
f2 <- ctr_var / (1 - ctr_var)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.8)
hist(ctr)
hist(ctr, breaks = seq(0.03,0.08,0.001))
hist(ctr, breaks = seq(0.03,0.08,0.05))
hist(ctr, breaks = seq(0.03,0.08,0.005))
hist(ctr, breaks = seq(0.03,0.08,0.0025))
hist(ctr, breaks = seq(0.03,0.08,0.005))
ctr_var
sd(ctr)
sd(ctr)**2
pwr.f2.test(u = 3, f2 = 0.02, sig.level = 0.05, power = 0.8)
pwr.f2.test(u = 3, f2 = 0.01, sig.level = 0.05, power = 0.8)
set.seed(1)
repetitions = 1000
N = 10000
n = N/8
var1  = c(   .03,    .03,    .03,    .03,    .06,    .06,    .09,   .09)
var2  = c(     0,      0,      0,      1,      0,      1,      0,     1)
rates = c(0.0025, 0.0025, 0.0025, 0.00395, 0.003, 0.0042, 0.0035, 0.002)
var1    = rep(var1, times=n)
var2    = rep(var2, times=n)
var12   = var1**2
var1x2  = var1 *var2
var12x2 = var12*var2
significant = matrix(nrow=repetitions, ncol=7)
startT = proc.time()[3]
for(i in 1:repetitions){
responses          = rbinom(n=N, size=1, prob=rates)
model              = glm(responses~var1+var2+var12+var1x2+var12x2,
family=binomial(link="logit"))
significant[i,1:5] = (summary(model)$coefficients[2:6,4]<.05)
significant[i,6]   = sum(significant[i,1:5])
modelDev           = model$null.deviance-model$deviance
significant[i,7]   = (1-pchisq(modelDev, 5))<.05
}
endT = proc.time()[3]
endT-startT
model
str(model)
names(model$coefficients)
summary(model)
model.summary <- summary(model)
model.summary$coefficients
model.summary$coefficients[2:6]
model.summary$coefficients[2:6,]
model.summary$coefficients[2:6,4]
model.summary$coefficients[2:6,4]<0.05
model$deviance
model$null.deviance
model
install.packages("datarobot")
library(datarobot)
library(datarobot)
ConnectToDataRobot(endpoint ='http://tvlk-data-datarobot-apps-lb-1080587125.ap-southeast-1.elb.amazonaws.com/api/v2', token='OIrd03JlWbo4q42PASFdHztbC5rmYe0N')
rm(list=ls())
setwd("~/workspace/r/display_opt/")
library(nloptr)
#flight
#hotel
Total_budget <- 688000
CA_flight_target <- 35000
CA_hotel_target <- 27500
Season <- 0
num_iter <- 10000
WB <- 1
WH <- 1
WF <- 1
file_historical <- "./data_input_historical_cost.csv"
file_budseas <- "./data_input_budgetseason.csv"
file_to_pred <- "./data_input_topred.csv"
file_DR_dataset <- "./data_input_datarobot.csv"
source("./displayopt_lib_v1.R")
model <- runModelAll(file_historical, file_budseas)
b <- c(16987.33,241097.7,74782.76,84995.68,45363.65,235207.6, 525.441,21842.27,3772.961,30000,53340.3)
res <- predictModelAll(b)
rm(list=ls())
setwd("~/workspace/r/display_opt/")
library(nloptr)
#flight
#hotel
Total_budget <- 688000
Season <- 0
CA_flight_target <- 35000
CA_hotel_target <- 27500
num_iter <- 100
WB <- 1
WH <- 1
WF <- 1
file_historical <- "./data_input_historical_cost.csv"
file_budseas <- "./data_input_budgetseason.csv"
file_to_pred <- "./data_input_topred.csv"
file_DR_dataset <- "./data_input_datarobot.csv"
source("./displayopt_lib.R")
model <- runModelAll(file_historical, file_budseas)
df_pred <- prepareTSDataPred(file_to_pred, Season, Total_budget)
fn1 <- function (b) {
(b[1]+b[2]+b[3]+b[4]+b[5]+b[6]+b[7]+b[8]+b[9]+b[10]+b[11])
}
eq <- function(b) {
constr <- predictModelAll(b, Season, Total_budget, CA_flight_target, CA_hotel_target, model, df_pred)
c1 <- WF*(CA_flight_target - constr$CA_flight)
c2 <- WH*(CA_hotel_target - constr$CA_hotel)
c3 <- WB*((b[1]+b[2]+b[3]+b[4]+b[5]+b[6]+b[7]+b[8]+b[9]+b[10]+b[11]) - Total_budget)
# Sys.sleep(0.005)
return(c(c1,c2,c3))
}
t0 <- proc.time()
res <- nloptr(x0=c(rep(Total_budget/11,11)),
eval_f=fn1,
lb = c(rep(0,11)),
# ub = c(16987.33,241097.7,74782.76,84995.68,45363.65,235207.6,525.441,21842.27,3772.961,30000,53340.3),
ub = c(rep(Total_budget,11)),
eval_g_ineq = eq,
opts = list("algorithm"="NLOPT_LN_AUGLAG","maxeval"=num_iter,"local_opts"=list("algorithm"="NLOPT_LN_COBYLA")))
t1 <- proc.time(); print(t1-t0)
print(res$solution)
rm(list=ls())
setwd("~/workspace/r/display_opt/")
library(nloptr)
#flight
#hotel
Total_budget <- 688000
Season <- 0
CA_flight_target <- 35000
CA_hotel_target <- 27500
num_iter <- 100
WB <- 1
WH <- 1
WF <- 1
file_historical <- "./data_input_historical_cost.csv"
file_budseas <- "./data_input_budgetseason.csv"
file_to_pred <- "./data_input_topred.csv"
file_DR_dataset <- "./data_input_datarobot.csv"
source("./displayopt_lib.R")
model <- runModelAll(file_historical, file_budseas)
df_pred <- prepareTSDataPred(file_to_pred, Season, Total_budget)
fn1 <- function (b) {
(b[1]+b[2]+b[3]+b[4]+b[5]+b[6]+b[7]+b[8]+b[9]+b[10]+b[11])
}
eq <- function(b) {
constr <- predictModelAll(b, Season, Total_budget, CA_flight_target, CA_hotel_target, model, df_pred)
c1 <- WF*(CA_flight_target - constr$CA_flight)
c2 <- WH*(CA_hotel_target - constr$CA_hotel)
c3 <- WB*((b[1]+b[2]+b[3]+b[4]+b[5]+b[6]+b[7]+b[8]+b[9]+b[10]+b[11]) - Total_budget)
# Sys.sleep(0.005)
return(c(c1,c2,c3))
}
t0 <- proc.time()
res <- nloptr(x0=c(rep(Total_budget/11,11)),
eval_f=fn1,
lb = c(rep(0,11)),
ub = c(16987.33,241097.7,74782.76,84995.68,45363.65,235207.6,525.441,21842.27,3772.961,30000,53340.3),
# ub = c(rep(Total_budget,11)),
eval_g_ineq = eq,
opts = list("algorithm"="NLOPT_LN_AUGLAG","maxeval"=num_iter,"local_opts"=list("algorithm"="NLOPT_LN_COBYLA")))
t1 <- proc.time(); print(t1-t0)
print(res$solution)
#file_save <- ""
#write.csv(res$solution,file_save)
rm(list=ls())
setwd("~/workspace/r/display_opt/")
library(nloptr)
#flight
#hotel
Total_budget <- 688000
Season <- 0
CA_flight_target <- 35000
CA_hotel_target <- 27500
num_iter <- 100
WB <- 1
WH <- 1
WF <- 1
file_historical <- "./data_input_historical_cost.csv"
file_budseas <- "./data_input_budgetseason.csv"
file_to_pred <- "./data_input_topred.csv"
file_DR_dataset <- "./data_input_datarobot.csv"
source("./displayopt_lib.R")
model <- runModelAll(file_historical, file_budseas)
df_pred <- prepareTSDataPred(file_to_pred, Season, Total_budget)
fn1 <- function (b) {
(b[1]+b[2]+b[3]+b[4]+b[5]+b[6]+b[7]+b[8]+b[9]+b[10]+b[11])
}
eq <- function(b) {
constr <- predictModelAll(b, Season, Total_budget, CA_flight_target, CA_hotel_target, model, df_pred)
c1 <- WF*(CA_flight_target - constr$CA_flight)
c2 <- WH*(CA_hotel_target - constr$CA_hotel)
c3 <- WB*((b[1]+b[2]+b[3]+b[4]+b[5]+b[6]+b[7]+b[8]+b[9]+b[10]+b[11]) - Total_budget)
# Sys.sleep(0.005)
return(c(c1,c2,c3))
}
t0 <- proc.time()
res <- nloptr(x0=c(rep(0,11)),
eval_f=fn1,
lb = c(rep(0,11)),
ub = c(16987.33,241097.7,74782.76,84995.68,45363.65,235207.6,525.441,21842.27,3772.961,30000,53340.3),
# ub = c(rep(Total_budget,11)),
eval_g_ineq = eq,
opts = list("algorithm"="NLOPT_LN_AUGLAG","maxeval"=num_iter,"local_opts"=list("algorithm"="NLOPT_LN_COBYLA")))
t1 <- proc.time(); print(t1-t0)
print(res$solution)
#file_save <- ""
#write.csv(res$solution,file_save)
