library(readr)
Kuisioner_Tugas_Akhir <- read_csv("~/Downloads/Kuisioner Tugas Akhir.csv")
View(Kuisioner_Tugas_Akhir)
View(Kuisioner_Tugas_Akhir)
View(Kuisioner_Tugas_Akhir)
View(Kuisioner_Tugas_Akhir)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
delivery.df = data.frame(
Service = c(rep("Carrier 1", 15), rep("Carrier 2", 15),
rep("Carrier 3", 15)),
Destination = c(rep(c("Office 1", "Office 2", "Office 3",
"Office 4", "Office 5"), 9)),
Time = c(15.23, 14.32, 14.77, 15.12, 14.05,
15.48, 14.13, 14.46, 15.62, 14.23, 15.19, 14.67, 14.48, 15.34, 14.22,
16.66, 16.27, 16.35, 16.93, 15.05, 16.98, 16.43, 15.95, 16.73, 15.62,
16.53, 16.26, 15.69, 16.97, 15.37, 17.12, 16.65, 15.73, 17.77, 15.52,
16.15, 16.86, 15.18, 17.96, 15.26, 16.36, 16.44, 14.82, 17.62, 15.04)
)
View(delivery.df)
library(ggplot2)
ggplot(delivery.df, aes(Time, Destination, colour = Service)) + geom_point()
delivery.mod1 = aov(Time ~ Destination*Service, data = delivery.df)
summary(delivery.mod1)
help(aov)
install.packages("pwr")
library("pwr")
pwr.f2.test(u = 3, f2 = (0.1/0.9))
pwr.f2.test(u = 3, f2 = (0.1/0.9), sig.level = 0.05, power = 0.8)
pwr.f2.test(u = 3, f2 = (0.1/0.9), sig.level = 0.05, power = 0.99)
pwr.f2.test(u = 3, f2 = (0.1/0.9), sig.level = 0.05, power = 0.9)
pwr.f2.test(u = 3, v = 8000, sig.level = 0.05, power = 0.9)
8000/(8000+1)
sqrt(8000/8001)
x <- read.csv("~/Downloads/export.csv")
x
ctr <- x$isClickBanner
y <- density(ctr)
plot(y)
var(ctr)
sd(ctr)
sqrt(sd(ctr))
sqrt(var(ctr))
var(ctr) / (1 + var(ctr))
3.380991e-05
var(ctr) / (1 - var(ctr))
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.9)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.8)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.7)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.5)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.4)
rm(list = ls())
x <- read.csv("~/Downloads/export.csv")
ctr <- x$isClickBanner
ctr_var <- var(ctr)
num_pred <- 4
f2 <- ctr_var / (1 - ctr_var)
pwr.f2.test(u = 3, f2 = 3.380991e-05, sig.level = 0.05, power = 0.8)
hist(ctr)
hist(ctr, breaks = seq(0.03,0.08,0.001))
hist(ctr, breaks = seq(0.03,0.08,0.05))
hist(ctr, breaks = seq(0.03,0.08,0.005))
hist(ctr, breaks = seq(0.03,0.08,0.0025))
hist(ctr, breaks = seq(0.03,0.08,0.005))
ctr_var
sd(ctr)
sd(ctr)**2
pwr.f2.test(u = 3, f2 = 0.02, sig.level = 0.05, power = 0.8)
pwr.f2.test(u = 3, f2 = 0.01, sig.level = 0.05, power = 0.8)
set.seed(1)
repetitions = 1000
N = 10000
n = N/8
var1  = c(   .03,    .03,    .03,    .03,    .06,    .06,    .09,   .09)
var2  = c(     0,      0,      0,      1,      0,      1,      0,     1)
rates = c(0.0025, 0.0025, 0.0025, 0.00395, 0.003, 0.0042, 0.0035, 0.002)
var1    = rep(var1, times=n)
var2    = rep(var2, times=n)
var12   = var1**2
var1x2  = var1 *var2
var12x2 = var12*var2
significant = matrix(nrow=repetitions, ncol=7)
startT = proc.time()[3]
for(i in 1:repetitions){
responses          = rbinom(n=N, size=1, prob=rates)
model              = glm(responses~var1+var2+var12+var1x2+var12x2,
family=binomial(link="logit"))
significant[i,1:5] = (summary(model)$coefficients[2:6,4]<.05)
significant[i,6]   = sum(significant[i,1:5])
modelDev           = model$null.deviance-model$deviance
significant[i,7]   = (1-pchisq(modelDev, 5))<.05
}
endT = proc.time()[3]
endT-startT
model
str(model)
names(model$coefficients)
summary(model)
model.summary <- summary(model)
model.summary$coefficients
model.summary$coefficients[2:6]
model.summary$coefficients[2:6,]
model.summary$coefficients[2:6,4]
model.summary$coefficients[2:6,4]<0.05
model$deviance
model$null.deviance
model
install.packages("rstan")
library("rstan")
setwd("~/workspace/r/bayesian/")
library(rstan)
library(coda)
install.packages("coda")
#the explanatory variables
dat<-data.frame(x1=runif(100,-2,2),x2=runif(100,-2,2))
View(dat)
X<-model.matrix(~x1*x2,dat)
View(X)
betas<-runif(4,-1,1)
sigma<-1
y_norm<-rnorm(100,X%*%betas,sigma)
new_X<-model.matrix(~x1*x2,expand.grid(x1=seq(min(dat$x1),max(dat$x1),length=20),x2=c(min(dat$x2),mean(dat$x2),max(dat$x2))))
View(new_X)
#the model
m_norm<-stan(file="normal_regression.stan",data = list(N=100,N2=60,K=4,y=y_norm,X=X,new_X=new_X),pars = c("beta","sigma","y_pred"))
m_norm<-stan(file="ex1",data = list(N=100,N2=60,K=4,y=y_norm,X=X,new_X=new_X),pars = c("beta","sigma","y_pred"))
m_norm<-stan(file="ex1.stan",data = list(N=100,N2=60,K=4,y=y_norm,X=X,new_X=new_X),pars = c("beta","sigma","y_pred"))
post_beta<-As.mcmc.list(m_norm,pars="beta")
plot(post_beta)
str(post_beta)
names(post_beta)
post_beta[[1]]
dim(post_beta[[1]])
hist(post_beta[[1]])
hist(post_beta[[2]])
hist(post_beta[[1]][,1])
hist(post_beta[[1]][,2])
hist(post_beta[[1]][,3])
hist(post_beta[[1]][,4])
names(post_beta[[1]])
colnames(post_beta[[1]])
colnames(post_beta[[3]])
pairs(m_norm,pars="beta")
#plot the correlation between the parameters
pairs(m_norm,pars="beta")
apply(extract(m_norm,pars="beta")$beta,2,function(x) length(which(x>0))/4000)
#plotting credible intervals for the different betas
plot(m_norm,pars=c("beta","sigma"))
plot(post_beta)
typeof(m_norm)
class(m_norm)
plot(m_norm)
plot(m_norm, "stan_plot")
plot(m_norm, "stan_hist")
plot(m_norm, hist)
plot(post_beta, hist)
plot(post_beta, "hist")
m_norm
m_norm<-stan(file="ex1.stan",data = list(N=100,K=4,y=y_norm,X=X),pars = c("beta","sigma"))
m_norm
post_beta<-As.mcmc.list(m_norm,pars="beta")
plot(post_beta)
apply(extract(m_norm,pars="beta")$beta,2,function(x) length(which(x>0))/4000)
pairs(m_norm,pars="beta")
plot(m_norm,pars=c("beta","sigma"))
df <- read.csv("~/Downloads/abtest_promoBanner_1702_summary.csv")
rm(list=ls())
df <- read.csv("~/Downloads/abtest_promoBanner_1702_summary.csv")
View(df)
X <- df[,2:5]
View(X)
cbind(rep(1,nrow(X)), X)
X <- df[,2:5]
intercept <- rep(1,nrow(X))
X <- cbind(intercept, X)
# Predictor variables
X <- df[,2:5]
intercept <- rep(1,nrow(X))
X <- cbind(intercept, X)
# Response variables
y <- df$rate
y
length(y)
ncol(X)
N <- length(y)
K <- ncol(X)
m_norm<-stan(file="abtest201708_v1.rstan",data = list(N=N,K=K,y=y,X=X),pars = c("param","sigma"))
N <- length(y)
K <- ncol(X)
m_norm<-stan(file="abtest201708_v1.rstan",data = list(N=N,K=K,y=y,X=X),pars = c("param","sigma"))
post_beta<-As.mcmc.list(m_norm,pars="beta")
post_beta<-As.mcmc.list(m_norm,pars="param")
plot(post_beta)
apply(extract(m_norm,pars="param")$param,2,function(x) length(which(x>0))/4000)
pairs(m_norm,pars="param")
plot(m_norm,pars=c("param","sigma"))
hist(post_beta[[1]])
hist(post_beta[[1]][,1])
hist(post_beta[[1]][,2])
hist(post_beta[[1]][,3])
hist(post_beta[[1]][,4])
str(m_norm)
names(m_norm)
hist(m_norm$sigma)
dim(m_norm$sigma)
m_norm$sigma
m_norm[["sigma"]]
post_beta<-As.mcmc.list(m_norm)
names(post_beta)
post_beta
post_beta<-As.mcmc.list(m_norm)
post_beta[[1]]
lenght(post_beta)
length(post_beta)
post_beta<-As.mcmc.list(m_norm)
hist(m_norm$sigma)
m_norm$sigma
post_beta<-As.mcmc.list(m_norm)
post_beta[[5]]
post_beta[[4]]
post_beta[[1]]
post_beta[[1]][,1]
hist(post_beta[[1]][,1])
plot(post_beta)
names(post_beta[[1]][,1])
names(post_beta[[1]])
dim(post_beta[[1]])
colnames(post_beta[[1]])
hist(post_beta[[1]][,1])
hist(post_beta[[1]][,7])
hist(post_beta[[1]][,2])
hist(post_beta[[1]][,3])
density(post_beta[[1]][,3])
plot(density(post_beta[[1]][,3]))
plot(rnorm(1000, 0.025, 0.01))
hist(rnorm(1000, 0.025, 0.01))
hist(rnorm(1000, 0.025, 0.0075))
N <- length(y)
K <- ncol(X)
sigma <- 0.0075
m_norm<-stan(file="abtest201708_v1.rstan",data = list(N=N,K=K,y=y,X=X,sigma=sigma),pars = c("param","sigma"))
N <- length(y)
K <- ncol(X)
sigma <- 0.0075
m_norm<-stan(file="abtest201708_v1.rstan",data = list(N=N,K=K,y=y,X=X,sigma=sigma),pars = c("param"))
posterior<-As.mcmc.list(m_norm)
plot(posterior)
apply(extract(m_norm,pars="param")$param,2,function(x) length(which(x>0))/4000)
pairs(m_norm,pars="param")
plot(m_norm,pars=c("param","sigma"))
plot(m_norm,pars=c("param"))
hist(post_beta[[1]][,1])
hist(post_beta[[1]][,2])
dff <- read.csv("~/Downloads/export.csv")
View(dff)
mean(dff$isClickBanner)
var(dff$isClickBanner)
